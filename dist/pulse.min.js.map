{"version":3,"file":"pulse.min.js","sources":["../lib/helpers.ts","../lib/Dep.ts","../lib/computed.ts","../lib/relationController.ts","../lib/runtime.ts","../lib/dep.ts","../lib/reactive.ts","../lib/action.ts","../lib/collection.ts","../lib/subController.ts","../lib/storage.ts","../lib/collections/request.ts","../lib/collections/base.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../lib/wrappers/ReactWithPulse.js","../lib/library.ts"],"sourcesContent":["export const protectedNames = [\n  'data',\n  'indexes',\n  'groups',\n  'computed',\n  'actions',\n  'routes'\n];\n\nexport const collectionFunctions = [\n  'collect',\n  'replaceIndex',\n  'getGroup',\n  'newGroup',\n  'deleteGroup',\n  'removeFromGroup',\n  'update',\n  'increment',\n  'decrement',\n  'delete',\n  'purge',\n  'watch',\n  'findById',\n  'put',\n  'move',\n  'throttle',\n  'forceUpdate',\n  // deprecated\n  'remove'\n];\n\nexport function defineConfig(config, defaults) {\n  return { ...defaults, ...config };\n}\n\nexport function parse(key: string) {\n  // if (typeof key !== 'string') debugger;\n  let primaryKey: string | number = key.split('/')[1];\n\n  let canBeNumber = Number(primaryKey);\n  if (canBeNumber !== NaN) primaryKey = canBeNumber;\n\n  return {\n    collection: key.split('/')[0],\n    primaryKey\n  };\n}\n\nexport function uuid() {\n  return (\n    Math.random()\n      .toString()\n      .split('.')[1] + Date.now()\n  );\n}\n\nexport function objectLoop(object, callback, keys?: Array<any>) {\n  const objectKeys = keys ? keys : Object.keys(object);\n  for (let i = 0; i < objectKeys.length; i++) {\n    const key: string = objectKeys[i];\n    const value: any = object[key];\n    callback(key, value, objectKeys);\n  }\n}\n\nexport function isWatchableObject(value) {\n  function isHTMLElement(obj) {\n    try {\n      return obj instanceof HTMLElement;\n    } catch (e) {\n      return (\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.style === 'object' &&\n        typeof obj.ownerDocument === 'object'\n      );\n    }\n  }\n  let type = typeof value;\n  return (\n    value != null &&\n    type == 'object' &&\n    !isHTMLElement(value) &&\n    !Array.isArray(value)\n  );\n}\n\n// const thing = {}\n// objectLoop(thing, (thingKey, thingItem) => {\n\n// })\n\nexport function log(value: any, payload?: any) {\n  // console.log(`Pulse / ${value}`, payload ? payload : ' ');\n}\nexport function key(collection: string, property?: string | number) {\n  return `${collection}/${property}`;\n}\n\nexport function normalizeMap(map) {\n  return Array.isArray(map)\n    ? map.map(key => ({ key, val: key }))\n    : Object.keys(map).map(key => ({ key, val: map[key] }));\n}\n\nexport const arrayFunctions = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\nexport function cleanse(object: any) {\n  if (!isWatchableObject(object)) return object;\n  const clean = Object.assign({}, object);\n  const properties = Object.keys(clean);\n\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n\n    if (isWatchableObject(clean[property])) {\n      clean[property] = cleanse(clean[property]);\n    }\n  }\n  return clean;\n}\n\nexport function assert(\n  func: (warnings: { [key: string]: any }) => any,\n  funcName?: string\n) {\n  function warn(message) {\n    // if (funcName) console.log(`PULSE // \"${funcName}()\" :: ${message}`);\n    // else console.warn(`PULSE :: ${message}`);\n    return false;\n  }\n  const warnings = {\n    NO_PRIMARY_KEY: () => warn('No primary $1 key found! $2'),\n    INVALID_PARAMETER: () => warn('Invalid parameter supplied to function.'),\n    INDEX_NOT_FOUND: () => warn('Index was not found on collection.'),\n    INTERNAL_DATA_NOT_FOUND: () => warn('Data was not found on collection.'),\n    PROPERTY_NOT_A_NUMBER: () => warn('Property is not a number!')\n  };\n  return func(warnings)();\n}\n\nexport function validateNumber(mutable, amount) {\n  if (typeof amount !== 'number' || typeof mutable !== 'number') {\n    return false;\n  }\n  return true;\n}\n","import { Global } from './interfaces';\nimport { RelationTypes } from './relationController';\nimport { DynamicRelation } from './relationController2';\nimport Collection from './collection';\nexport default class Dep {\n  // these\n  public dependents: any = new Set();\n  public subscribers: Array<object> = [];\n\n  // these are temporary relations created by the relation controller\n  public dynamicRelation: DynamicRelation = null;\n\n  constructor(\n    private global: Global,\n    // if this dep is for public or internal data within a collection\n    public type: 'reactive' | 'internal' | 'index' = 'reactive',\n    // the name of the coll\n    public colleciton: Collection,\n    // either the name of the object if rective or the primaryKey if internal\n    public propertyName: string | number,\n    // if the dep is part of a deep reactive object, this is the root property name\n    public rootProperty: string = null\n  ) {}\n\n  // for when public data is accessed, reactive class will trigger this function\n  register() {\n    const subs = this.global.subs;\n\n    if (this.global.runningComputed) {\n      this.dependents.add(this.global.runningComputed);\n    }\n    if (this.global.runningPopulate) {\n      this.global.relations.relate(\n        this.global.runningPopulate as Dep,\n        this as Dep\n      );\n    }\n    if (subs.subscribingComponent) {\n      this.subscribeComponent();\n    }\n    if (subs.unsubscribingComponent) {\n      // this.subscribers.delete(this.global.subscribingComponent);\n    }\n  }\n\n  changed() {\n    this.global.relations.cleanup(this.dynamicRelation);\n  }\n\n  subscribeComponent() {\n    const subs = this.global.subs;\n\n    if (this.rootProperty && subs.skimmingDeepReactive) {\n      subs.prepareNext(this);\n      return;\n    }\n    if (this.rootProperty) {\n      subs.foundDeepReactive();\n      subs.prepareNext(this);\n      return;\n    }\n    if (!this.rootProperty && subs.skimmingDeepReactive) {\n      subs.exitDeepReactive();\n    }\n\n    this.subscribe();\n\n    subs.prepareNext(this);\n  }\n  subscribe() {\n    const subs = this.global.subs;\n    const keys = subs.subscribingComponent.keys;\n    const key = keys[subs.subscribingComponentKey];\n    const component = {\n      componentUUID: subs.subscribingComponent.componentUUID,\n      key: key\n    };\n    this.subscribers.push(component);\n  }\n}\n","import { Global } from './interfaces';\nimport { DynamicRelation } from './relationController2';\nexport default class Computed {\n  public relatedToGroup: Array<any> = [];\n  public dynamicRelation: DynamicRelation = null;\n\n  constructor(\n    private global: Global,\n    public collection: string,\n    public name: string,\n    private computedFunction: (context: object) => any\n  ) {}\n\n  public run() {\n    this.global.relations.cleanup(this.dynamicRelation);\n\n    this.global.runningComputed = this;\n\n    let output = this.computedFunction(this.global.getContext(this.collection));\n\n    if (output === undefined || output === null) output = false;\n\n    this.global.runningComputed = false;\n    // haha uh oh stinky\n    return output;\n  }\n}\n// This is luka's log no. 197234 It's been 12 years, i dtil dont know the source of magnetic pull. why do rocks like stick together.. like wtf bro. for real how the fuck do magnets work\n","import { Global } from './interfaces';\nimport Computed from './computed';\nimport Dep from './dep';\n\nexport class DynamicRelation {\n  public depsToClean: Set<Dep> = new Set();\n  constructor(public updateThis: Dep | Computed) {}\n\n  // perform cleanup of all refrences to this instance\n  public destroy() {\n    this.depsToClean.forEach(dep => dep.dependents.delete(this));\n    delete this.updateThis.dynamicRelation;\n  }\n}\n// day 652. I havent found the root cause of magnetic pull. I will have to sell my bitcoins to fund my research on the topic. fear not. the mystery of magnest WILL be solved. -luka big pants.\n\nexport default class RelationController {\n  private relationBank: Set<DynamicRelation> = new Set();\n\n  constructor(private global: Global) {}\n\n  // function called during runningComputed and runningPopulate\n  public relate(updateThis: Computed | Dep, whenDepChanges: Dep) {\n    if (!whenDepChanges) return; // if a dep is not found, abort\n    let dep = whenDepChanges;\n\n    if (!updateThis.dynamicRelation) {\n      updateThis.dynamicRelation = new DynamicRelation(updateThis);\n      this.relationBank.add(updateThis.dynamicRelation);\n    }\n\n    // save Dep inside relation so relation knows where to remove dependent from on cleanup\n    updateThis.dynamicRelation.depsToClean.add(dep);\n\n    // add dynamic relation as a dependent inside Dep\n    dep.dependents.add(updateThis.dynamicRelation);\n  }\n\n  // when a job is complete with a dep that includes a dynamic\n  public cleanup(dynamicRelation: DynamicRelation): void {\n    // perform cleanup, destroy dynamic relation\n    if (!dynamicRelation) return;\n    dynamicRelation.destroy(); // destory all refrences\n    this.relationBank.delete(dynamicRelation); // remove last reference from bank\n  }\n}\n\nexport enum RelationTypes {\n  COMPUTED_DEPENDS_ON_DATA = 'COMPUTED_DEPENDS_ON_DATA', // used by findById() when run in computed\n  COMPUTED_DEPENDS_ON_GROUP = 'COMPUTED_DEPENDS_ON_GROUP', // used by getGroup() when run in computed\n  DATA_DEPENDS_ON_DEP = 'DATA_DEPENDS_ON_DEP', // the Dep class of a property when used in populate()\n  DATA_DEPENDS_ON_GROUP = 'DATA_DEPENDS_ON_GROUP', // used by getGroup() when run in populate()\n  DATA_DEPENDS_ON_DATA = 'DATA_DEPENDS_ON_DATA' // used by findById() when run in populate()\n}\n","import { log, objectLoop, log, cleanse } from './helpers';\nimport { Job, Global } from './interfaces';\nimport Dep from './Dep';\nimport Computed from './computed';\nimport { DynamicRelation } from './relationController';\n\nexport enum JobType {\n  PUBLIC_DATA_MUTATION = 'PUBLIC_DATA_MUTATION',\n  INTERNAL_DATA_MUTATION = 'INTERNAL_DATA_MUTATION',\n  INDEX_UPDATE = 'INDEX_UPDATE',\n  COMPUTED_REGEN = 'COMPUTED_REGEN',\n  GROUP_UPDATE = 'GROUP_UPDATE',\n  SOFT_GROUP_UPDATE = 'SOFT_GROUP_UPDATE',\n  DELETE_INTERNAL_DATA = 'DELETE_INTERNAL_DATA'\n}\nexport default class Runtime {\n  public running: Boolean = false;\n  public updatingSubscribers: Boolean = false;\n\n  private ingestQueue: Array<Job> = [];\n  private completedJobs: Array<Job> = [];\n  private archivedJobs: Array<Job> = [];\n\n  // private collections: Object;\n  private config: Object;\n\n  constructor(private collections: Object, private global: Global) {\n    global.ingest = this.ingest.bind(this);\n    global.ingestDependents = this.ingestDependents.bind(this);\n    this.config = global.config;\n  }\n\n  // The primary entry point for Runtime, all jobs should come through here\n  public ingest(job: Job): void {\n    // console.log(job);\n    this.ingestQueue.push(job);\n\n    // don't begin the next job until this one is fully complete\n    if (!this.running) {\n      this.findNextJob();\n    }\n  }\n\n  private findNextJob() {\n    this.running = true;\n    // shift the next job from the queue\n    let next = this.ingestQueue.shift();\n\n    if (!next.dep && next.type !== JobType.INDEX_UPDATE)\n      // groups, computed and indexes will not have their Dep class, so get it.\n      next.dep = this.global.getDep(next.property, next.collection);\n\n    // execute the next task in the queue\n    this.performJob(next);\n  }\n\n  private performJob(job: Job): void {\n    switch (job.type) {\n      case JobType.PUBLIC_DATA_MUTATION:\n        this.performPublicDataUpdate(job);\n        this.collections[job.collection].runWatchers(job.property);\n        break;\n      case JobType.INTERNAL_DATA_MUTATION:\n        this.performInternalDataUpdate(job);\n        break;\n      case JobType.INDEX_UPDATE:\n        this.performIndexUpdate(job);\n        break;\n      case JobType.COMPUTED_REGEN:\n        this.performComputedOutput(job);\n        this.collections[job.collection].runWatchers(job.property.name);\n        break;\n      case JobType.GROUP_UPDATE:\n        this.performGroupRebuild(job);\n        this.collections[job.collection].runWatchers(job.property);\n        break;\n      case JobType.SOFT_GROUP_UPDATE:\n        this.performGroupRebuild(job);\n        this.collections[job.collection].runWatchers(job.property);\n        break;\n      case JobType.DELETE_INTERNAL_DATA:\n        this.performInternalDataDeletion(job);\n        break;\n      default:\n        break;\n    }\n\n    // unpack dependents\n    if (job.dep && job.dep.dependents.size > 0) {\n      this.ingestDependents(job.dep.dependents);\n    }\n\n    this.finished();\n  }\n\n  public ingestDependents(dependents: Set<any>): void {\n    // this is called twice below\n    const ingestComputed = (computed: Computed) =>\n      this.ingest({\n        type: JobType.COMPUTED_REGEN,\n        collection: computed.collection,\n        property: computed,\n        dep: this.global.getDep(computed.name, computed.collection)\n      });\n\n    // for each dependent stored in dep class\n    dependents.forEach(dependent => {\n      // there are two types of dependents stored: Computed and DynamicRelation\n      if (dependent instanceof Computed) ingestComputed(dependent);\n      else if (dependent instanceof DynamicRelation) {\n        // one might think using \"instanceOf\" would work as expected below\n        // but it doesn't, alas I hate javascript.\n        // temp fix: constructor.name - be my guest try and fix this??\n        const type = dependent.updateThis.constructor.name;\n        // DynamicRelation can store either Computed or Dep (internal)\n        if (type === Computed.name)\n          ingestComputed(dependent.updateThis as Computed);\n        else if (type === Dep.name) {\n          // ingest internal data mutation without a value will result in a soft group update\n          this.ingest({\n            type: JobType.INTERNAL_DATA_MUTATION,\n            collection: (dependent.updateThis as Dep).colleciton.name,\n            property: (dependent.updateThis as Dep).propertyName\n          });\n        }\n      }\n    });\n  }\n\n  // handle job loop flow\n  private finished(): void {\n    this.running = false;\n    if (this.completedJobs.length > 5000) return;\n\n    // If there's already more stuff in the queue, loop.\n    if (this.ingestQueue.length > 0) {\n      this.findNextJob();\n      return;\n    }\n\n    // Wait until callstack is empty to check if we should finalise this body of work\n    setTimeout(() => {\n      if (this.ingestQueue.length === 0) {\n        if (!this.updatingSubscribers) this.compileComponentUpdates();\n        this.cleanup();\n      } else {\n        // loop more!\n        this.findNextJob();\n      }\n    });\n  }\n\n  // ****************** Perform Functions ****************** //\n  private performPublicDataUpdate(job: Job): void {\n    this.writeToPublicObject(job.collection, 'data', job.property, job.value);\n    this.completedJob(job);\n  }\n\n  private performInternalDataUpdate(job: Job): void {\n    // if job was not ingested with a value, get the most recent value from collection database\n    if (!job.value) {\n      if (this.collections[job.collection].internalData[job.property])\n        job.value = this.collections[job.collection].internalData[job.property];\n      // this would usually be redundant, since the data has not changed, but since the relationController has no access to the collections, but does need to trigger data to rebuild, it issues an internal data \"update\". It's own data has not changed, but the dynamic data related to it via populate() has.\n    }\n\n    // overwrite or insert the data into collection database saving the previous value to job.previousValue, since this.overwriteInternalData returns it.\n    job.previousValue = this.overwriteInternalData(\n      job.collection,\n      job.property as string | number,\n      job.value\n    );\n\n    // collection function handels ingesting indexes to update itself, since it waits until\n    // all internal data has been ingested before handling the affected indexes\n    // however for direct data modifications we should update afected indexes\n    if (!this.global.collecting) {\n      // affected indexes is an array of indexes that have this primary key (job.property) present.\n      const affectedIndexes: Array<string> = this.collections[\n        job.collection\n      ].searchIndexesForPrimaryKey(job.property);\n\n      affectedIndexes.forEach(index => {\n        // since this is a singular piece of data that has changed, we do not need to\n        // rebuild the entire group, so we can soft rebuild\n        let modifiedGroup = this.collections[\n          job.collection\n        ].softUpdateGroupData(job.property, index);\n\n        this.ingest({\n          type: JobType.SOFT_GROUP_UPDATE,\n          collection: job.collection,\n          value: modifiedGroup,\n          property: index,\n          dep: this.global.getDep(index, job.collection)\n          // we do not need a previousValue because groups are cached outputs and reversing the internal data update will do the trick\n        });\n      });\n    }\n\n    this.completedJob(job);\n  }\n\n  private performInternalDataDeletion(job: Job): void {\n    const c = this.collections[job.collection];\n    // preserve previous value\n    job.previousValue = { ...c.internalData[job.property] };\n    // delete data\n    delete c.internalData[job.property];\n    // find indexes affected by this data deletion\n    const indexesToUpdate = this.collections[\n      job.collection\n    ].searchIndexesForPrimaryKey(job.collection, job.property);\n\n    // for each found index, perform index update\n    for (let i = 0; i < indexesToUpdate.length; i++) {\n      const indexName = indexesToUpdate[i];\n      const newIndex = [...c.indexes.object[indexName]].filter(\n        id => id !== job.property\n      );\n      this.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: c.name,\n        property: indexName,\n        value: newIndex,\n        dep: this.global.getDep(job.property, job.collection)\n      });\n    }\n    this.completedJob(job);\n  }\n\n  private performIndexUpdate(job: Job): void {\n    // preserve old index\n    job.previousValue = this.collections[job.collection].indexes[job.property];\n    // Update Index\n    this.collections[job.collection].indexes.privateWrite(\n      job.property,\n      job.value\n    );\n    this.completedJob(job);\n\n    // Group must also be updated\n    this.ingest({\n      type: JobType.GROUP_UPDATE,\n      collection: job.collection,\n      property: job.property,\n      dep: this.global.getDep(job.property, job.collection)\n    });\n  }\n\n  private performGroupRebuild(job: Job): void {\n    // soft group rebuilds already have a generated value, otherwise generate the value\n    if (!job.value) {\n      job.value = this.collections[job.collection].buildGroupFromIndex(\n        job.property\n      );\n    }\n\n    // TODO: trigger relaction controller to update group relations\n    // this.global.relations.groupModified(job.collection, job.property);\n\n    this.writeToPublicObject(job.collection, 'group', job.property, job.value);\n    this.completedJob(job);\n  }\n\n  public performComputedOutput(job: Job): void {\n    const computed =\n      typeof job.property === 'string'\n        ? this.collections[job.collection].computed[job.property]\n        : job.property;\n\n    job.value = computed.run();\n    // Commit Update\n    this.writeToPublicObject(\n      job.collection,\n      'computed',\n      computed.name,\n      job.value\n    );\n    this.completedJob(job);\n  }\n\n  // ****************** Handlers ****************** //\n\n  private completedJob(job: Job): void {\n    // if action is running, save that action instance inside job payload\n    job.fromAction = this.global.runningAction;\n    // during runtime log completed job ready for component updates\n    if (this.global.initComplete) this.completedJobs.push(job);\n    // if data is persistable ensure storage is updated with new data\n    this.persistData(job);\n\n    // tell the dep the parent changed\n    if (job.dep) job.dep.changed();\n  }\n\n  // ****************** End Runtime Events ****************** //\n\n  private compileComponentUpdates(): void {\n    if (!this.global.initComplete) return;\n    this.updatingSubscribers = true;\n    log('ALL JOBS COMPLETE', this.completedJobs);\n    log('Updating components...');\n\n    const componentsToUpdate = {};\n\n    // for all completed jobs\n    for (let i = 0; i < this.completedJobs.length; i++) {\n      const job = this.completedJobs[i];\n\n      // if job has a Dep class present\n      // Dep class contains subscribers to that property (as a completed job)\n      if (job.dep) {\n        let subscribers: Array<any> = job.dep.subscribers;\n\n        // for all the subscribers\n        for (let i = 0; i < subscribers.length; i++) {\n          // add to componentsToUpdate (ensuring update & component is unique)\n          const uuid = subscribers[i].componentUUID;\n          const key = subscribers[i].key;\n          // below is a band-aid, caused by (what I believe to be) deep reactive properties submitting several updates for the same mutation, one for each level deep, since the parent is triggered as well\n          // if (!key) continue;\n\n          // if this component isn't already registered for this particular update, add it.\n          if (!componentsToUpdate[uuid]) {\n            componentsToUpdate[uuid] = {};\n            componentsToUpdate[uuid][key] = job.value;\n            // otherwise add the update to the component\n          } else {\n            componentsToUpdate[uuid][key] = job.value;\n          }\n        }\n      }\n    }\n\n    this.updateSubscribers(componentsToUpdate);\n    this.completedJobs = [];\n  }\n\n  private updateSubscribers(componentsToUpdate) {\n    // console.log('updating subscribers', componentsToUpdate);\n    const componentKeys = Object.keys(componentsToUpdate);\n    for (let i = 0; i < componentKeys.length; i++) {\n      const componentID = componentKeys[i];\n      const componentInstance = this.global.subs.componentStore[componentID];\n      if (!componentInstance || !componentInstance.instance) return;\n      const propertiesToUpdate = componentsToUpdate[componentID];\n      const dataKeys = Object.keys(propertiesToUpdate);\n      // Switch depending on framework\n\n      switch (this.global.config.framework) {\n        case 'vue':\n          dataKeys.forEach(property => {\n            const value = propertiesToUpdate[property];\n            componentInstance.instance.$set(\n              componentInstance.instance,\n              property,\n              // this prevents vue from adding getters/setters to any objects, but might be wasteful computation\n              // considering this is not important and does not change perfomance, its probably best to not bother cleansing every\n              // value update. actually thinking about it this is terrbile. remove this soon.\n              // honestly it's only here because I have OCD.\n              cleanse(value)\n            );\n          });\n          break;\n        case 'react':\n          componentInstance.instance.setState(propertiesToUpdate);\n          // console.log(propertiesToUpdate);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  private persistData(job: Job): void {\n    if (job.type === JobType.INTERNAL_DATA_MUTATION) return;\n    if (this.collections[job.collection].persist.includes(job.property)) {\n      this.global.storage.set(job.collection, job.property, job.value);\n    }\n  }\n\n  private cleanup(): void {\n    setTimeout(() => {\n      this.updatingSubscribers = false;\n    });\n  }\n\n  // ****************** Misc Handlers ****************** //\n\n  private writeToPublicObject(\n    collection: string,\n    type: string,\n    key: string,\n    value: any\n  ): void {\n    if (type === 'indexes') {\n      if (!this.collections[collection][type].object.hasOwnProperty(key))\n        return;\n      this.collections[collection][type].privateWrite(key, value);\n    } else {\n      if (!this.collections[collection].public.object.hasOwnProperty(key))\n        return;\n      this.collections[collection].public.privateWrite(key, value);\n    }\n  }\n\n  private overwriteInternalData(\n    collection: string,\n    primaryKey: string | number,\n    newData: any\n  ): object | boolean {\n    const internalData = this.collections[collection].internalData;\n    // create a copy of the original data\n    const currentData = internalData[primaryKey]\n      ? { ...internalData[primaryKey] }\n      : false;\n\n    if (currentData) {\n      // data already exists, merge objects and return previous object\n      const keys = Object.keys(newData || {});\n      for (let i = 0; i < keys.length; i++) {\n        const property = keys[i];\n        internalData[primaryKey][property] = newData[property];\n      }\n      return currentData;\n    } else {\n      // data does not exist, write and return false\n      internalData[primaryKey] = newData;\n      return false;\n    }\n  }\n}\n","import { Global } from './interfaces';\nimport { RelationTypes } from './relationController';\nimport { DynamicRelation } from './relationController2';\nimport Collection from './collection';\nexport default class Dep {\n  // these\n  public dependents: any = new Set();\n  public subscribers: Array<object> = [];\n\n  // these are temporary relations created by the relation controller\n  public dynamicRelation: DynamicRelation = null;\n\n  constructor(\n    private global: Global,\n    // if this dep is for public or internal data within a collection\n    public type: 'reactive' | 'internal' | 'index' = 'reactive',\n    // the name of the coll\n    public colleciton: Collection,\n    // either the name of the object if rective or the primaryKey if internal\n    public propertyName: string | number,\n    // if the dep is part of a deep reactive object, this is the root property name\n    public rootProperty: string = null\n  ) {}\n\n  // for when public data is accessed, reactive class will trigger this function\n  register() {\n    const subs = this.global.subs;\n\n    if (this.global.runningComputed) {\n      this.dependents.add(this.global.runningComputed);\n    }\n    if (this.global.runningPopulate) {\n      this.global.relations.relate(\n        this.global.runningPopulate as Dep,\n        this as Dep\n      );\n    }\n    if (subs.subscribingComponent) {\n      this.subscribeComponent();\n    }\n    if (subs.unsubscribingComponent) {\n      // this.subscribers.delete(this.global.subscribingComponent);\n    }\n  }\n\n  changed() {\n    this.global.relations.cleanup(this.dynamicRelation);\n  }\n\n  subscribeComponent() {\n    const subs = this.global.subs;\n\n    if (this.rootProperty && subs.skimmingDeepReactive) {\n      subs.prepareNext(this);\n      return;\n    }\n    if (this.rootProperty) {\n      subs.foundDeepReactive();\n      subs.prepareNext(this);\n      return;\n    }\n    if (!this.rootProperty && subs.skimmingDeepReactive) {\n      subs.exitDeepReactive();\n    }\n\n    this.subscribe();\n\n    subs.prepareNext(this);\n  }\n  subscribe() {\n    const subs = this.global.subs;\n    const keys = subs.subscribingComponent.keys;\n    const key = keys[subs.subscribingComponentKey];\n    const component = {\n      componentUUID: subs.subscribingComponent.componentUUID,\n      key: key\n    };\n    this.subscribers.push(component);\n  }\n}\n","import { protectedNames, arrayFunctions, isWatchableObject } from './helpers';\nimport Dep from './dep';\nimport { Global } from './interfaces';\nimport Collection from './collection';\n\ninterface Obj {\n  [key: string]: any;\n}\n\nexport default class Reactive {\n  public properties: Array<string>;\n  public object: Obj;\n  private dispatch: any;\n  private allowPrivateWrite: boolean = false;\n  private touching: boolean = false;\n  private touched: null | Dep;\n  private sneaky: boolean;\n  private tempDeps: { [key: string]: Dep } = {};\n\n  constructor(\n    object: Obj = {},\n    private global: Global,\n    private collection: Collection,\n    public mutable: Array<string>,\n    public type: 'root' | 'indexes'\n  ) {\n    this.dispatch = this.global.dispatch;\n    this.properties = Object.keys(object);\n\n    this.object = this.reactiveObject(object);\n  }\n\n  reactiveObject(object: Obj, rootProperty?: string): object {\n    const objectKeys = Object.keys(object);\n\n    // Loop over all properties of the to-be reactive object\n    for (let i = 0; i < objectKeys.length; i++) {\n      const key = objectKeys[i];\n      this.defineProperty(object, key, rootProperty);\n    }\n    return object;\n  }\n\n  private defineProperty(\n    object: Obj,\n    key: string,\n    rootProperty?: string\n  ): object {\n    const self = this;\n    let value = object[key];\n    if (object.rootProperty) rootProperty = object.rootProperty;\n\n    // // If property is an array, make it reactive\n    // if (Array.isArray(value)) {\n    //   // value = this.reactiveArray(value, key);\n    // }\n\n    // rootProperty should be the current key if first deep object\n    if (isWatchableObject(value) && !protectedNames.includes(key)) {\n      value = this.deepReactiveObject(value, rootProperty || key, key);\n    }\n\n    // Create an instance of the dependency tracker\n    const dep = this.createDep(key, rootProperty);\n\n    Object.defineProperty(object, key, {\n      get: function pulseGetter() {\n        if (self.sneaky) return value;\n\n        if (self.global.touching) {\n          self.global.touched = dep;\n          return value;\n        }\n        dep.register();\n\n        return value;\n      },\n      set: function pulseSetter(newValue) {\n        // DEEP REACTIVE handler: \"rootProperty\" indicates if the object is \"deep\".\n        if (rootProperty && self.mutable.includes(rootProperty)) {\n          // mutate locally\n          value = newValue;\n          // dispatch mutation for deep property\n          self.dispatch('mutation', {\n            collection: self.collection.name,\n            key: rootProperty,\n            value: self.object[rootProperty],\n            dep\n          });\n\n          // Regular muations\n        } else {\n          // if a protected name allow direct mutation\n          if (protectedNames.includes(key)) {\n            return (value = newValue);\n          }\n          // if backdoor open allow direct mutation\n          if (self.allowPrivateWrite) {\n            // dynamically convert new values to reactive if objects\n            // This is risky as fuck and kinda doesn't even work\n            if (isWatchableObject(value) && self.mutable.includes(key)) {\n              // debugger;\n              newValue = self.deepReactiveObject(\n                newValue,\n                rootProperty || key,\n                key\n              );\n            }\n            return (value = newValue);\n          }\n\n          // if property is mutable dispatch update\n          if (self.mutable.includes(key)) {\n            self.dispatch('mutation', {\n              collection: self.collection.name,\n              key,\n              value: newValue,\n              dep\n            });\n            // we did not apply the mutation since runtime will privatly\n            // write the result since we dispatched above\n          }\n        }\n      }\n    });\n    return object;\n  }\n\n  public addProperty(key, value) {\n    this.object[key] = value;\n    this.defineProperty(this.object, key);\n  }\n\n  public tempDep(property) {\n    const dep = this.createDep(property);\n    this.tempDeps[property] = dep;\n    return dep;\n  }\n\n  private cloneDep(dep: Dep) {\n    dep = Object.assign(Object.create(Object.getPrototypeOf(dep)), dep);\n    // debugger;\n    // delete this.tempDeps[dep.propertyName];\n    return dep;\n  }\n\n  private createDep(key: string, rootProperty?: string) {\n    let dep: Dep;\n    if (this.tempDeps.hasOwnProperty(key) && !rootProperty) {\n      dep = this.cloneDep(this.tempDeps[key]);\n    } else {\n      dep = new Dep(\n        this.global,\n        this.type === 'indexes' ? 'index' : 'reactive',\n        this.collection,\n        key,\n        rootProperty\n      );\n    }\n    return dep;\n  }\n\n  private deepReactiveObject(\n    value,\n    rootProperty?: string,\n    propertyName?: string\n  ) {\n    let objectWithCustomPrototype = Object.create({\n      rootProperty,\n      propertyName\n    });\n\n    // repopulate custom object with incoming values\n    const keys = Object.keys(value);\n    for (let i = 0; i < keys.length; i++) {\n      const property = keys[i];\n      objectWithCustomPrototype[property] = value[property];\n    }\n\n    this.allowPrivateWrite = true;\n    const obj = this.reactiveObject(objectWithCustomPrototype, rootProperty);\n    this.allowPrivateWrite = false;\n    return obj;\n  }\n\n  reactiveArray(array, key) {\n    const self = this;\n    const reactiveArray = array.slice();\n\n    for (let i = 0; i < arrayFunctions.length; i++) {\n      const func = arrayFunctions[i];\n      const original = Array.prototype[func];\n      Object.defineProperty(reactiveArray, func, {\n        value: function() {\n          const result = original.apply(this, arguments);\n          if (self.global.initComplete)\n            self.dispatch('mutation', {\n              collection: self.collection.name,\n              key,\n              value: result\n            });\n          return result;\n        }\n      });\n    }\n    return reactiveArray;\n  }\n\n  public privateWrite(property, value) {\n    this.allowPrivateWrite = true;\n    this.object[property] = value;\n    this.allowPrivateWrite = false;\n  }\n\n  // sneaky blocked the getter, sneaky.\n  public privateGet(property) {\n    this.sneaky = true;\n    const data = this.object[property];\n    this.sneaky = false;\n    return data;\n  }\n\n  public exists(property: string): boolean {\n    this.sneaky = true;\n    const bool = !!this.object.hasOwnProperty(property);\n    this.sneaky = false;\n    return bool;\n  }\n\n  public getKeys(): Array<string> {\n    this.sneaky = true;\n    const keys = Object.keys(this.object);\n    this.sneaky = false;\n    return keys;\n  }\n}\n\n// look for computed output access to determine dependencies\n// remove computed categories from public object on default config\n","import { uuid } from \"./helpers\";\nimport { Global } from \"./interfaces\";\n\nexport default class Action {\n  public executing: boolean = false;\n  public uuid: string;\n  public exec: () => {};\n\n  constructor(\n    private collection: string,\n    private global: Global,\n    public action: any,\n    public actionName: string\n  ) {\n    this.uuid = uuid();\n    this.prepare(action, global, this.global.contextRef.undo);\n  }\n\n  prepare(action, global, undo) {\n    const _this = this;\n\n    this.exec = function() {\n      const context = global.getContext(_this.collection);\n      context.undo = error => {\n        return undo(this.actionName, this.uuid, error);\n      };\n      global.runningAction = _this;\n\n      _this.executing = true;\n\n      const result = action.apply(\n        null,\n        [context].concat(Array.prototype.slice.call(arguments))\n      );\n\n      _this.executing = false;\n      global.runningAction = false;\n\n      return result;\n    };\n  }\n}\n","import {\n  assert,\n  defineConfig,\n  validateNumber,\n  collectionFunctions,\n  objectLoop,\n  key\n} from './helpers';\nimport Reactive from './reactive';\nimport Action from './action';\nimport Computed from './computed';\nimport Dep from './dep';\nimport { JobType } from './runtime';\nimport {\n  Methods,\n  Keys,\n  CollectionObject,\n  CollectionConfig,\n  Global,\n  ExpandableObject\n} from './interfaces';\nimport { RelationTypes, Key } from './relationController';\n\nexport default class Collection {\n  private namespace: CollectionObject;\n  public public: Reactive;\n  public indexes: Reactive;\n  public config: CollectionConfig = {};\n  public keys: Keys = {};\n  public methods: Methods = {};\n\n  public actions: { [key: string]: Action } = {};\n  public computed: { [key: string]: Computed } = {};\n  public watchers: { [key: string]: any } = {};\n  public externalWatchers: { [key: string]: any } = {};\n  public persist: Array<string> = [];\n  public local: { [key: string]: any } = {};\n  public model: { [key: string]: any } = {};\n\n  public collectionSize: number = 0;\n  public primaryKey: string | number | boolean = false;\n\n  private internalData: object = {};\n  public internalDataDeps: object = {}; // this contains the dep classes for all internal data\n  private internalDataWithPopulate: Array<string> = [];\n\n  dispatch: void;\n\n  constructor(\n    public name: string,\n    protected global: Global,\n    root: CollectionObject\n  ) {\n    this.config = root.config;\n    this.dispatch = this.global.dispatch;\n\n    // legacy support (\"filters\" changed to \"computed\")\n    root.computed = { ...root.computed, ...root.filters };\n\n    root = this.prepareNamespace(root);\n\n    this.initReactive(root.data, root.groups);\n    this.initRoutes(root.routes);\n    this.initActions(root.actions);\n    this.initWatchers(root.watch);\n    this.initComputed(root.computed);\n\n    this.initModel(root.model);\n    this.initPersist(root.persist);\n  }\n\n  prepareNamespace(root: CollectionObject) {\n    // map collection methods\n    collectionFunctions.map(\n      func => (this.methods[func] = this[func].bind(this))\n    );\n\n    if (root.local) this.local = root.local;\n\n    // for each type set default and register keys\n    ['data', 'actions', 'computed', 'indexes', 'routes', 'watch'].forEach(\n      type => {\n        if (type !== 'indexes' && !root[type]) root[type] = {};\n        this.keys[type] =\n          type === 'indexes' ? root['groups'] || [] : Object.keys(root[type]);\n      }\n    );\n\n    // assign namespace, this is used by initReactive\n    this.namespace = Object.assign(\n      Object.create({ ...this.methods }), // bind methods to prototype\n      {\n        routes: {},\n        indexes: {},\n        actions: root.actions,\n        ...root.computed,\n        ...root.data,\n        ...this.normalizeGroups(root.groups)\n      }\n    );\n    return root;\n  }\n\n  // groups are defined by the user as an array of strings, this converts them into object/keys\n  normalizeGroups(groupsAsArray: any = []) {\n    const groups: object = {};\n    for (let i = 0; i < groupsAsArray.length; i++) {\n      const groupName = groupsAsArray[i];\n      groups[groupName] = [];\n    }\n    return groups;\n  }\n\n  runWatchers(property) {\n    const watcher = this.watchers[property];\n    if (watcher) watcher();\n    const externalWatchers = this.externalWatchers[property];\n    if (externalWatchers)\n      externalWatchers.forEach(func =>\n        typeof func === 'function' ? func() : false\n      );\n  }\n\n  initReactive(data: object = {}, groups: Array<any> | object = []) {\n    groups = this.normalizeGroups(groups);\n    // Make indexes reactive\n    this.indexes = new Reactive(\n      groups, // object\n      this.global, // global\n      this, // collection\n      this.keys.indexes, // mutable\n      'indexes' // type\n    );\n    this.namespace.indexes = this.indexes.object;\n\n    // Make entire public object Reactive\n    this.public = new Reactive(\n      this.namespace,\n      this.global,\n      this,\n      [...this.keys.data, ...this.keys.indexes],\n      'root'\n    );\n  }\n\n  initPersist(persist: Array<string>): void {\n    if (!Array.isArray(persist)) return;\n\n    for (let i = 0; i < persist.length; i++) {\n      const dataName = persist[i];\n\n      // TODO: validate\n\n      this.persist.push(dataName);\n      if (this.global.storage.isPromise) {\n        this.global.storage.get(this.name, dataName).then(data => {\n          if (data === undefined || data === null) return;\n          const job = {\n            type: JobType.PUBLIC_DATA_MUTATION,\n            value: data,\n            property: dataName,\n            collection: this.name,\n            dep: this.global.getDep(dataName, this.name)\n          };\n          this.global.ingest(job);\n        });\n      } else {\n        let data = this.global.storage.get(this.name, dataName);\n        if (data === undefined || data === null) continue;\n        this.public.privateWrite(dataName, data);\n      }\n    }\n  }\n\n  initActions(actions: object = {}) {\n    let actionKeys = Object.keys(actions);\n    for (let i = 0; i < actionKeys.length; i++) {\n      const action = actions[actionKeys[i]];\n      this.actions[actionKeys[i]] = new Action(\n        this.name,\n        this.global,\n        action,\n        actionKeys[i]\n      );\n\n      this.public.privateWrite(actionKeys[i], this.actions[actionKeys[i]].exec);\n    }\n  }\n\n  initWatchers(watchers: object = {}) {\n    let watcherKeys = Object.keys(watchers);\n    for (let i = 0; i < watcherKeys.length; i++) {\n      const watcher = watchers[watcherKeys[i]];\n      this.watchers[watcherKeys[i]] = () => {\n        this.global.runningWatcher = {\n          collection: this.name,\n          property: watcherKeys[i]\n        };\n        const watcherOutput = watcher(this.global.getContext(this.name));\n        this.global.runningWatcher = false;\n        return watcherOutput;\n      };\n    }\n    this.watchers._keys = watcherKeys;\n  }\n\n  initComputed(computed: object): void {\n    objectLoop(\n      computed,\n      (computedName: string, computedFunction: () => void) => {\n        this.computed[computedName] = new Computed(\n          this.global,\n          this.name,\n          computedName,\n          computedFunction\n        );\n        this.public.object[computedName] = [];\n      },\n      this.keys.computed\n    );\n  }\n\n  initRoutes(routes: ExpandableObject) {\n    const self = this;\n    const routeWrapped = routeName => {\n      return function() {\n        let requestObject = Object.assign({}, self.global.request);\n        requestObject.context = self.global.getContext();\n        return routes[routeName].apply(\n          null,\n          [requestObject].concat(Array.prototype.slice.call(arguments))\n        );\n      };\n    };\n    objectLoop(\n      routes,\n      routeName =>\n        (this.public.object.routes[routeName] = routeWrapped(routeName))\n    );\n  }\n\n  initModel(model = {}) {\n    this.model = model;\n    Object.keys(model).forEach(property => {\n      Object.keys(model[property]).forEach(config => {\n        switch (config) {\n          case 'primaryKey':\n            this.primaryKey = property;\n            break;\n          case 'populate':\n            this.internalDataWithPopulate.push(property);\n            break;\n        }\n      });\n    });\n  }\n\n  private getData(id) {\n    return { ...this.internalData[id] };\n  }\n\n  public buildGroupFromIndex(groupName: string): Array<number> {\n    const constructedArray = [];\n    // get index directly\n    let index = this.indexes.privateGet(groupName);\n    if (!index) return [];\n\n    // for every primaryKey in the index\n    for (let i = 0; i < index.length; i++) {\n      // primaryKey of data\n      let id = index[i];\n      // copy data from internal database\n      let data = this.getData(id);\n      // if none found skip\n      if (!data) continue;\n      // inject dynamic data\n      data = this.injectDynamicRelatedData(id, data);\n\n      constructedArray.push(data);\n    }\n    return constructedArray;\n  }\n\n  // rebuilding an entire group is expensive on resources, but is\n  // not nessisary if only one piece of data has changed\n  // this function will replace a single piece of data without rebuilding\n  // the entire group\n  public softUpdateGroupData(\n    primaryKey: string | number,\n    groupName: string\n  ): Array<any> {\n    let index: Array<any> = this.indexes.privateGet(groupName);\n\n    // find the data's position within index\n    let position: number = index.indexOf(primaryKey);\n\n    // if group is dynamic, just build the group from index.\n    if (!this.public[groupName]) return this.buildGroupFromIndex(groupName);\n\n    // copy the current group output\n    let currentGroup: Array<any> = [this.public[groupName]];\n\n    // get data for primaryKey\n    let data: { [key: string]: any } = { ...this.internalData[primaryKey] };\n\n    data = this.injectDynamicRelatedData(primaryKey, data);\n\n    // replace at known position with updated data\n    currentGroup[position] = data;\n\n    return currentGroup;\n  }\n\n  // This should be called on every piece of data retrieved when building a group from an index\n  private injectDynamicRelatedData(\n    primaryKey: string | number,\n    data: { [key: string]: any }\n  ): any {\n    // for each populate function extracted from the model for this data\n    this.internalDataWithPopulate.forEach(property => {\n      const dep = this.global.getDep(primaryKey, this.name, true);\n      this.global.runningPopulate = dep;\n      // run populate function passing in the context and the data\n      const populated = this.model[property].populate(\n        this.global.getContext(),\n        data\n      );\n\n      this.global.runningPopulate = false;\n      // inject result to data\n      data[property] = populated;\n    });\n    return data;\n  }\n\n  public createGroups(group) {\n    if (group === undefined) group = [];\n    else if (!Array.isArray(group)) group = [group];\n\n    for (let i = 0; i < group.length; i++) {\n      const groupName = group[i];\n      if (!this.indexes.exists(groupName)) {\n        this.indexes.addProperty(groupName, []);\n        // this.indexes.privateWrite(groupName, []);\n      }\n    }\n    return group;\n  }\n\n  // METHODS\n\n  public collect(\n    data,\n    group?: string | Array<string>,\n    config?: ExpandableObject\n  ) {\n    config = defineConfig(config, {\n      append: true\n    });\n    this.global.collecting = true;\n    // normalise data\n    if (!Array.isArray(data)) data = [data];\n\n    // if groups don't already exist, create them dynamically\n    const groups: Array<string> = this.createGroups(group);\n    // groups now contains just the groups directly modified by this collect\n\n    // preserve index previous values\n    const previousIndexValues: object = this.getPreviousIndexValues(groups);\n\n    const indexesToRegenOnceComplete = new Set();\n\n    // process data items\n    for (let i = 0; i < data.length; i++) {\n      const dataItem = data[i];\n\n      if (dataItem === null) continue;\n      // process data item returns \"success\" as a boolean and affectedIndexes as an array\n      const processDataItem = this.processDataItem(dataItem, groups, config);\n\n      if (!processDataItem) continue;\n\n      if (processDataItem.success) this.collectionSize++;\n      // ensure indexes modified by this data item are waiting to be ingested for regen\n      processDataItem.affectedIndexes.forEach(index =>\n        indexesToRegenOnceComplete.add(index)\n      );\n    }\n\n    indexesToRegenOnceComplete.forEach(index => {\n      this.global.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: this.name,\n        property: index,\n        value: this.indexes.privateGet(index),\n        previousValue: previousIndexValues[index],\n        dep: this.global.getDep(index, this.indexes.object)\n      });\n    });\n\n    this.global.collecting = false;\n  }\n\n  processDataItem(dataItem: object, groups: Array<string> = [], config) {\n    if (!this.primaryKey) this.findPrimaryKey(dataItem);\n\n    if (!this.primaryKey) return false;\n\n    const key = dataItem[this.primaryKey as number | string];\n\n    // find affected indexes\n    let affectedIndexes = [...groups];\n\n    // searchIndexesForPrimaryKey returns an array of indexes that include that primaryKey\n    // for each index found, if it is not already known, add to affected indexes\n    this.searchIndexesForPrimaryKey(key).map(\n      index => !affectedIndexes.includes(index) && affectedIndexes.push(index)\n    );\n\n    // validate against model\n\n    // create the dep class\n    if (!this.internalDataDeps[key])\n      this.internalDataDeps[key] = new Dep(this.global, 'internal', this, key);\n\n    // ingest the data\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this.name,\n      property: key,\n      value: dataItem,\n      dep: this.internalDataDeps[key]\n    });\n\n    // add the data to group indexes\n    for (let i = 0; i < groups.length; i++) {\n      const groupName = groups[i];\n      let index = this.indexes.privateGet(groupName);\n\n      // remove key if already present in index\n      index = index.filter(k => k != key);\n\n      if (config.append) index.push(key);\n      else index.unshift(key);\n\n      // write index\n      this.indexes.privateWrite(groupName, index);\n    }\n    return { success: true, affectedIndexes };\n  }\n\n  private searchIndexesForPrimaryKey(\n    primaryKey: string | number\n  ): Array<string> {\n    // get a fresh copy of the keys to include dynamic indexes\n    const keys = this.indexes.getKeys();\n\n    let foundIndexes: Array<string> = [];\n\n    // for every index\n    for (let i = 0; i < keys.length; i++) {\n      const indexName = keys[i];\n\n      // if the index includes the primaryKey\n      if (this.indexes.privateGet(indexName).includes(primaryKey))\n        foundIndexes.push(indexName);\n    }\n    return foundIndexes;\n  }\n\n  getPreviousIndexValues(groups) {\n    const returnData = {};\n    for (let i = 0; i < groups; i++) {\n      const groupName = groups[i];\n      returnData[groupName] = this.indexes.privateGet(groupName);\n    }\n    return returnData;\n  }\n\n  findPrimaryKey(dataItem) {\n    if (dataItem.hasOwnProperty('id')) this.primaryKey = 'id';\n    else if (dataItem.hasOwnProperty('_id')) this.primaryKey = '_id';\n    else if (dataItem.hasOwnProperty('key')) this.primaryKey = 'key';\n    if (this.primaryKey) return true;\n    else return assert(warn => warn.NO_PRIMARY_KEY);\n  }\n\n  replaceIndex(indexName: string, newIndex: Array<string | number>) {\n    if (!Array.isArray(newIndex) || typeof indexName !== 'string')\n      return assert(warn => warn.INVALID_PARAMETER, 'replaceIndex');\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: indexName,\n      value: newIndex\n    });\n  }\n\n  // if a computed function evaluates and creates a relation to internal data\n  // that does not exist yet, we create the dep class and save it in advance\n  // so that if the data ever arrives, it will reactively dependent update accordingly\n  depForInternalData(primaryKey: string | number): Dep {\n    let dep: Dep;\n    // debugger;\n    if (!this.internalDataDeps[primaryKey]) {\n      dep = new Dep(this.global, 'internal', this, primaryKey);\n      this.internalDataDeps[primaryKey] = dep;\n    } else {\n      dep = this.internalDataDeps[primaryKey];\n    }\n    return dep;\n  }\n\n  //\n  depForGroup(groupName: string): Dep {\n    let dep: Dep;\n    // no group is found publically, use index instead\n    if (this.public.exists(groupName)) {\n      dep = this.global.getDep(groupName, this.name);\n    } else if (this.indexes.exists(groupName)) {\n      dep = this.global.getDep(groupName, this.indexes.object);\n    } else {\n      dep = this.indexes.tempDep(groupName);\n    }\n    return dep;\n  }\n\n  findById(id: string | number) {\n    let internalDep: Dep = this.depForInternalData(id);\n\n    if (this.global.runningComputed) {\n      let computed = this.global.runningComputed as Computed;\n      this.global.relations.relate(computed, internalDep);\n    }\n    if (this.global.runningPopulate) {\n      let populate = this.global.runningPopulate as Dep;\n      this.global.relations.relate(populate, internalDep);\n    }\n    return this.internalData[id];\n  }\n\n  getGroup(property) {\n    let groupDep: Dep = this.depForGroup(property);\n    // if called inside Computed method, create temporary relation in relationship controller\n    if (this.global.runningComputed) {\n      let computed = this.global.runningComputed as Computed;\n      this.global.relations.relate(computed, groupDep);\n    }\n    // if called from within populate() create another temporary relation\n    if (this.global.runningPopulate) {\n      let dataDep = this.global.runningPopulate as Dep;\n      this.global.relations.relate(dataDep, groupDep);\n    }\n    // get group is not cached, so generate a fresh group from the index\n    return this.buildGroupFromIndex(property) || [];\n  }\n\n  // action functions\n  undo() {}\n  throttle() {}\n\n  // group functions\n  move(\n    ids: number | Array<string | number>,\n    sourceIndexName: string,\n    destIndexName?: string,\n    method: 'push' | 'unshift' = 'push'\n  ) {\n    // validation\n    if (!this.indexes.exists(sourceIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'move');\n\n    if (destIndexName && !this.indexes.exists(destIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'move');\n\n    if (!Array.isArray(ids)) ids = [ids];\n\n    let sourceIndex = this.indexes.privateGet(sourceIndexName);\n    for (let i = 0; i < ids.length; i++)\n      sourceIndex = sourceIndex.filter(id => id !== ids[i]);\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: sourceIndexName,\n      value: sourceIndex\n    });\n\n    if (destIndexName) {\n      let destIndex = this.indexes.privateGet(destIndexName);\n\n      for (let i = 0; i < ids.length; i++) {\n        // destIndex = destIndex.filter(k => k != ids[i]);\n\n        if (destIndex.includes(ids[i])) continue;\n\n        // push or unshift id into current index\n        destIndex[method](ids[i]);\n      }\n\n      this.global.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: this.name,\n        property: destIndexName,\n        value: destIndex\n      });\n    }\n  }\n\n  put(\n    ids: number | Array<string | number>,\n    destIndexName: string,\n    method: 'push' | 'unshift' = 'push'\n  ) {\n    // validation\n    if (!this.indexes.exists(destIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'put');\n\n    if (!Array.isArray(ids)) ids = [ids];\n\n    // get current index\n    let destIndex = this.indexes.privateGet(destIndexName);\n\n    // This doesn't work because the array spead sets the object to index: value rather than just the values\n    // let test = { ...destIndex };\n    // ids.map(k => {\n    //   if (test[k]) return;\n    //   test[k] = true;\n    // });\n    // destIndex = Object.keys(test).map(k => Number(k));\n\n    // loop over every id user is trying to add into current index\n    for (let i = 0; i < ids.length; i++) {\n      // destIndex = destIndex.filter(k => k != ids[i]);\n\n      if (destIndex.includes(ids[i])) continue;\n\n      // push or unshift id into current index\n      destIndex[method](ids[i]);\n    }\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: destIndexName,\n      value: destIndex\n    });\n  }\n\n  newGroup(groupName: string, indexValue?: Array<string | number>) {\n    if (this.indexes.object.hasOwnProperty(groupName))\n      return assert(warn => warn.GROUP_ALREADY_EXISTS, 'newGroup');\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: groupName,\n      value: indexValue\n    });\n  }\n  deleteGroup(groupName: string) {\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: groupName,\n      value: []\n    });\n  }\n  removeFromGroup(\n    groupName: string,\n    itemsToRemove: number | string | Array<number | string>\n  ) {\n    if (!this.indexes.exists(groupName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'removeFromGroup');\n\n    if (!Array.isArray(itemsToRemove)) itemsToRemove = [itemsToRemove];\n\n    const index = this.indexes.privateGet(groupName);\n\n    const newIndex = index.filter(\n      id => !(itemsToRemove as Array<number | string>).includes(id)\n    );\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this.name,\n      property: groupName,\n      value: newIndex\n    });\n  }\n\n  // internal data functions\n  update(primaryKey: string | number, newObject: { [key: string]: any }) {\n    if (!this.internalData.hasOwnProperty(primaryKey))\n      return assert(warn => warn.INTERNAL_DATA_NOT_FOUND, 'update');\n\n    const newObjectKeys = Object.keys(newObject);\n    const currentData = Object.assign({}, this.internalData[primaryKey]);\n\n    for (let i = 0; i < newObjectKeys.length; i++) {\n      const key = newObjectKeys[i];\n      currentData[key] = newObject[key];\n    }\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this.name,\n      property: primaryKey,\n      value: currentData\n    });\n  }\n  increment(\n    primaryKey: string | number,\n    property: string,\n    amount: number,\n    decrement?: boolean\n  ) {\n    if (!this.internalData.hasOwnProperty(primaryKey))\n      return assert(\n        warn => warn.INTERNAL_DATA_NOT_FOUND,\n        decrement ? 'decrement' : 'increment'\n      );\n\n    const currentData = Object.assign({}, this.internalData[primaryKey]);\n\n    if (!validateNumber(amount, currentData[property]))\n      return assert(\n        warn => warn.PROPERTY_NOT_A_NUMBER,\n        decrement ? 'decrement' : 'increment'\n      );\n\n    if (decrement) currentData[property] -= amount;\n    else currentData[property] += amount;\n\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this.name,\n      property: primaryKey,\n      value: currentData\n    });\n  }\n  decrement(primaryKey: string | number, property: string, amount: number) {\n    this.increment(primaryKey, property, amount, true);\n  }\n\n  delete(primaryKeys: string | number | Array<string | number>) {\n    if (!Array.isArray(primaryKeys)) primaryKeys = [primaryKeys];\n    for (let i = 0; i < primaryKeys.length; i++) {\n      const primaryKey = primaryKeys[i];\n      this.global.ingest({\n        type: JobType.DELETE_INTERNAL_DATA,\n        collection: this.name,\n        property: primaryKey\n      });\n    }\n  }\n\n  // remove all dynamic indexes, empty all indexes, delete all internal data\n  purge() {}\n\n  // external functions\n  watch(property, callback) {\n    if (!this.externalWatchers[property])\n      this.externalWatchers[property] = [callback];\n    else this.externalWatchers[property].push(callback);\n  }\n\n  forceUpdate(property: string): void {\n    // ensure property exists on collection\n    if (this.public.exists(property)) {\n      // if property is directly mutable\n\n      if (this.public.mutable.includes(property)) {\n        this.global.ingest({\n          type: JobType.PUBLIC_DATA_MUTATION,\n          property,\n          collection: this.name,\n          value: this.public.privateGet(property),\n          dep: this.global.getDep(property, this.name)\n        });\n\n        // if property is a computed method\n      } else if (this.computed[property]) {\n        this.global.ingest({\n          type: JobType.COMPUTED_REGEN,\n          property,\n          collection: this.name,\n          dep: this.global.getDep(property, this.name)\n        });\n      }\n    }\n  }\n\n  // deprecate\n  // added removeFromGroup to be more specific, params got switched around, keeping this for backwards compatibility\n  remove(itemsToRemove, groupName) {\n    return this.removeFromGroup(groupName, itemsToRemove);\n  }\n}\n","// This file handles external components subscribing to pulse.\n// It also handles subscribing mapData properties to collections\n\nimport { uuid, cleanse, isWatchableObject } from './helpers';\nimport { ComponentContainer } from './interfaces';\nimport Dep from './dep';\nimport { worker } from 'cluster';\n\ninterface SubscribingComponentObject {\n  componentUUID: string;\n  keys: Array<string>;\n}\n\nexport default class SubController {\n  public subscribingComponentKey: number = 0;\n  public subscribingComponent: boolean | SubscribingComponentObject = false;\n  public unsubscribingComponent: boolean = false;\n  public skimmingDeepReactive: boolean = false;\n  public uuid: any = uuid;\n  public lastAccessedDep: null | Dep = null;\n\n  public componentStore: { [key: string]: ComponentContainer } = {};\n\n  constructor(private getContext) {}\n\n  registerComponent(instance, config) {\n    let uuid = instance.__pulseUniqueIdentifier;\n    if (!uuid) {\n      // generate UUID\n      uuid = this.uuid();\n      // inject uuid into component instance\n      const componentContainer = {\n        instance: instance,\n        uuid,\n        ready: config.waitForMount ? false : true\n      };\n      instance.__pulseUniqueIdentifier = uuid;\n\n      this.componentStore[uuid] = componentContainer;\n    } else {\n      this.mount(instance);\n    }\n    return uuid;\n  }\n\n  mount(instance) {\n    let component = this.componentStore[instance.__pulseUniqueIdentifier];\n\n    if (component) {\n      component.instance = instance;\n      component.ready = true;\n    }\n  }\n\n  unmount(instance) {\n    const uuid = instance.__pulseUniqueIdentifier;\n    if (!uuid) return;\n\n    // delete refrence to this component from store\n    delete this.componentStore[instance.__pulseUniqueIdentifier];\n  }\n\n  subscribePropertiesToComponents(properties, componentUUID) {\n    // provisionally get keys of mapped data\n    const provision = properties(this.getContext());\n\n    const keys = Object.keys(provision);\n\n    // mapData has a user defined local key, we need to include that in the\n    // subscription so we know what to update on the component later.\n    this.subscribingComponentKey = 0;\n\n    this.subscribingComponent = {\n      componentUUID,\n      keys\n    };\n\n    let returnToComponent = properties(this.getContext());\n\n    this.subscribingComponent = false;\n\n    this.subscribingComponentKey = 0;\n\n    // cleanse any deep objects of their getters/setters from Pulse and ensure object is a copy\n    // Object.keys(returnToComponent).forEach(property => {\n    //   returnToComponent[property] = cleanse(returnToComponent[property]);\n    // });\n    // returnToComponent = Object.assign({}, returnToComponent);\n\n    // console.log(returnToComponent);\n\n    return returnToComponent;\n  }\n\n  prepareNext(dep) {\n    this.lastAccessedDep = dep;\n    if (!this.skimmingDeepReactive) this.subscribingComponentKey++;\n  }\n\n  foundDeepReactive() {\n    this.skimmingDeepReactive = true;\n    // undo changes\n    this.lastAccessedDep.subscribers.pop();\n    this.subscribingComponentKey--;\n  }\n\n  exitDeepReactive() {\n    this.skimmingDeepReactive = false;\n    //redo changes\n    this.lastAccessedDep.subscribe();\n    this.subscribingComponentKey++;\n  }\n}\n","interface StorageMethods {\n  async?: boolean;\n  get?: any;\n  set?: any;\n  remove?: any;\n}\n\nexport default class Storage {\n  private isPromise: boolean = false;\n  private storageReady: boolean = false;\n  private storageType: 'localStorage' | 'custom' = 'localStorage';\n  constructor(private storageMethods: StorageMethods = {}) {\n    if (storageMethods.async) this.isPromise = true;\n\n    // assume if user provided get, set or remove methods that the storage type is custom\n    if (storageMethods.get || storageMethods.set || storageMethods.remove) {\n      this.storageType = 'custom';\n    }\n\n    if (this.localStorageAvaliable() && this.storageType === 'localStorage') {\n      this.storageReady = true;\n      storageMethods.get = localStorage.getItem.bind(localStorage);\n      storageMethods.set = localStorage.setItem.bind(localStorage);\n      storageMethods.remove = localStorage.removeItem.bind(localStorage);\n    } else {\n      this.storageType = 'custom';\n\n      if (\n        this.check(storageMethods.get) &&\n        this.check(storageMethods.set) &&\n        this.check(storageMethods.remove)\n      ) {\n        this.storageReady = true;\n      } else {\n        this.storageReady = false;\n        // bad\n      }\n    }\n  }\n\n  public get(collection, key) {\n    if (!this.storageReady) return;\n\n    if (this.isPromise) {\n      return new Promise((resolve, reject) => {\n        this.storageMethods\n          .get(this.getKey(collection, key))\n          .then(res => {\n            // if result is not JSON for some reason, return it.\n            if (typeof res !== 'string') return resolve(res);\n\n            resolve(JSON.parse(res));\n          })\n          .catch(reject);\n      });\n    } else {\n      return JSON.parse(this.storageMethods.get(this.getKey(collection, key)));\n    }\n  }\n\n  public set(collection, key, value) {\n    if (!this.storageReady) return;\n    this.storageMethods.set(\n      this.getKey(collection, key),\n      JSON.stringify(value)\n    );\n  }\n\n  public remove(collection, key) {\n    if (!this.storageReady) return;\n    this.storageMethods.remove(this.getKey(collection, key));\n  }\n\n  private getKey(collection, key) {\n    return `_${collection}_${key}`;\n  }\n\n  private check(func) {\n    return typeof func === 'function';\n  }\n\n  private localStorageAvaliable() {\n    try {\n      localStorage.setItem('_', '_');\n      localStorage.removeItem('_');\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import Collection from '../collection';\nimport { Global, ExpandableObject, RequestConfig } from '../interfaces';\n\ntype Method = 'get' | 'put' | 'post' | 'patch' | 'delete';\n\nexport default class Request extends Collection {\n  private timeout: number;\n  private options: ExpandableObject;\n  private saveHistory: boolean;\n\n  private requestIntercept: (\n    context: ExpandableObject,\n    options: ExpandableObject\n  ) => void;\n  private responseIntercept: (\n    context: ExpandableObject,\n    response: ExpandableObject\n  ) => void;\n\n  constructor(global: Global, requestConfig: RequestConfig) {\n    // Before we invoke the parent class, we define some defaults\n    let groups = [];\n    let persist = ['baseURL'];\n    let data = {\n      baseURL: requestConfig.baseURL || '',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        Accept: 'application/json'\n      }\n    };\n\n    if (requestConfig.headers)\n      Object.keys(requestConfig.headers).forEach(header => {\n        data.headers[header] = requestConfig.headers[header];\n      });\n\n    if (requestConfig.credentials) data.credentials = requestConfig.credentials;\n    if (requestConfig.mode) data.mode = requestConfig.mode;\n\n    super('request', global, { groups, data, persist });\n\n    this.requestIntercept = requestConfig.requestIntercept;\n    this.responseIntercept = requestConfig.responseIntercept;\n    this.timeout = requestConfig.timeout;\n    this.saveHistory =\n      typeof requestConfig.saveHistory === 'undefined' ? true : false;\n\n    this.global.request = {\n      get: this.get.bind(this),\n      post: this.post.bind(this),\n      put: this._put.bind(this),\n      patch: this.patch.bind(this),\n      delete: this.delete.bind(this),\n      queryify: this.queryify.bind(this)\n    };\n  }\n\n  get(url: string, headers?: ExpandableObject) {\n    return this.send(url, 'get', {}, headers);\n  }\n\n  post(url: string, body?: ExpandableObject, headers?: ExpandableObject) {\n    return this.send(url, 'post', body, headers);\n  }\n\n  _put(url: string, body?: ExpandableObject, headers?: ExpandableObject) {\n    return this.send(url, 'put', body, headers);\n  }\n\n  patch(url: string, body?: ExpandableObject, headers?: ExpandableObject) {\n    return this.send(url, 'patch', body, headers);\n  }\n\n  delete(url: string, body?: ExpandableObject, headers?: ExpandableObject) {\n    return this.send(url, 'delete', body, headers);\n  }\n\n  async send(\n    url: string,\n    method: Method,\n    body: ExpandableObject | string = {},\n    headers: ExpandableObject\n  ) {\n    const requestHeaders = Object.assign({}, this.public.object.headers);\n\n    if (headers)\n      Object.keys(headers).forEach(header => {\n        requestHeaders[header] = headers[header];\n      });\n\n    // If method is not get set application type\n    if (method !== 'get' && requestHeaders['Content-Type'] === undefined)\n      requestHeaders['Content-Type'] = 'application/json';\n\n    let fullURL;\n\n    if (url.startsWith('http')) fullURL = url;\n    else fullURL = `${this.public.object.baseURL}/${url}`;\n\n    // Stringify body\n    body = JSON.stringify(body);\n\n    // Build options\n    this.options = {};\n    this.options.credentials = this.public.object.credentials;\n    this.options.mode = this.public.object.mode;\n\n    // Build final fetch options object\n    const options = Object.assign(\n      {\n        headers: requestHeaders,\n        method: method.toUpperCase(),\n        body: method === 'get' ? null : body\n      },\n      this.options\n    );\n\n    if (this.requestIntercept)\n      this.requestIntercept(this.global.getContext('request'), options);\n\n    let response: any;\n\n    if (this.timeout) {\n      response = await Promise.race([\n        fetch(fullURL, options),\n        new Promise((resolve, reject) =>\n          setTimeout(() => reject('timeout'), this.timeout)\n        )\n      ]);\n    } else {\n      response = await fetch(fullURL, options);\n    }\n\n    const contentType = response.headers.get('content-type');\n\n    // extract body\n    if (contentType && contentType.indexOf('application/json') !== -1) {\n      body = await response.json();\n    } else {\n      body = await response.text();\n    }\n\n    // history\n    if (!this.saveHistory)\n      this.collect({\n        id: Date.now(),\n        status: response.status,\n        timestamp: new Date(),\n        response: body\n      });\n\n    // inject headers into prototype\n    let final;\n\n    // If reponse body is an object, create a custom object with response function in prototype, so headers and the full response data can be accessed outside of this class\n    if (!Array.isArray(body) && typeof body === 'object') {\n      final = Object.create({\n        response: () => {\n          return response;\n        }\n      });\n      const keys = Object.keys(body);\n      for (let i = 0; i < keys.length; i++) {\n        const property = keys[i];\n        final[property] = body[property];\n      }\n      // if the body is not an object, we can not inject a prototype, so just return the rew body\n    } else {\n      final = body;\n    }\n    // intercept response\n    if (this.responseIntercept) {\n      response.data = body;\n      this.responseIntercept(this.global.getContext('request'), response);\n    }\n\n    // reject if bad response status\n    if (response.ok || response.redirected) return final;\n\n    // resolve response\n    throw final;\n  }\n\n  // Adapted from: https://github.com/Gozala/querystring/blob/master/encode.js\n  queryify(obj) {\n    const stringifyPrimitive = function(value) {\n      switch (typeof value) {\n        case 'string':\n          return value;\n\n        case 'boolean':\n          return value ? 'true' : 'false';\n\n        case 'number':\n          return isFinite(value) ? value : '';\n\n        default:\n          return '';\n      }\n    };\n    // validate input\n    if (typeof obj != 'object') return;\n\n    return Object.keys(obj)\n      .map(key => {\n        const encodedKey = encodeURIComponent(stringifyPrimitive(key)) + '=';\n        // if value is an array, encode with same key as parent\n        if (Array.isArray(obj[key]))\n          return obj[key]\n            .map(value => {\n              return encodedKey + encodeURIComponent(stringifyPrimitive(value));\n            })\n            .join('&');\n        // join encoded key with value\n        return encodedKey + encodeURIComponent(stringifyPrimitive(obj[key]));\n      })\n      .join('&');\n  }\n}\n","import Collection from '../collection';\nimport { Global, RootCollectionObject } from '../interfaces';\n\nexport default class Request extends Collection {\n  constructor(global: Global, root: RootCollectionObject = {}) {\n    root = Object.assign({}, root);\n\n    // Base as a collection is configured directly from the root of the Pulse config,\n    // thus to be verbose we remove the properties only used for global setup\n    // default collection properties like data, computed, actions etc will remain\n    delete root.collections;\n    delete root.request;\n\n    // if user has not created data or persist properties, create them for the defaults.\n    if (!root.data) root.data = {};\n    if (!root.persist) root.persist = [];\n\n    // can be used to preserve authenticated state\n    // automatically persists if local storage is availible\n    root.data['isAuthenticated'] = false;\n    root.persist.push('isAuthenticated');\n\n    // can be used to declare once the app has finished initilazation, does not affect Pulse\n    root.data['appReady'] = false;\n\n    super('base', global, root);\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _extends() {\n  _extends =\n    Object.assign ||\n    function(target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n  return _extends.apply(this, arguments);\n}\n\nexport default function withPulse(pulse, React, ReactComponent, selectData) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        ...pulse.mapData(\n          selectData,\n          this,\n          {\n            waitForMount:\n              pulse._private.global.config.waitForMount === false ? false : true\n          },\n          pulse\n        )\n      };\n    }\n    componentDidMount() {\n      if (pulse._private.global.config.waitForMount) pulse.mount(this);\n    }\n    componentWillUnmount() {\n      if (pulse._private.global.config.autoUnmount) pulse.unmount(this);\n    }\n    render() {\n      return React.createElement(\n        ReactComponent,\n        _extends(\n          {\n            pulse: this.state\n          },\n          this.props\n        )\n      );\n    }\n  };\n}\n","import Runtime from './runtime';\nimport Collection from './collection';\nimport SubController from './subController';\nimport Storage from './storage';\nimport Request from './collections/request';\nimport Base from './collections/base';\nimport withPulse from './wrappers/ReactWithPulse';\nimport {\n  uuid,\n  normalizeMap,\n  log,\n  defineConfig,\n  parse,\n  cleanse\n} from './helpers';\nimport { Private, RootCollectionObject, DebugType } from './interfaces';\nimport { JobType } from './runtime';\n\nimport RelationController, { Key } from './relationController';\nimport Dep from './dep';\n\nexport default class Library {\n  _private: Private;\n  [key: string]: any;\n  constructor(root: RootCollectionObject = {}) {\n    // Private object contains all internal Pulse data\n    this._private = {\n      runtime: null,\n      events: {},\n      collections: {},\n      collectionKeys: [],\n      // global is passed in to all classes, must not contain cyclic references\n      global: {\n        config: this.prepareConfig(root.config),\n        // State\n        initComplete: false,\n        runningAction: false,\n        runningWatcher: false,\n        runningComputed: false,\n        runningPopulate: false,\n        mappingData: false,\n        collecting: false,\n        touching: false,\n        touched: false,\n        contextRef: {},\n        // Instances\n        subs: new SubController(this.getContext.bind(this)),\n        relations: null,\n        storage: null,\n        // Function aliases\n        dispatch: this.dispatch.bind(this),\n        getInternalData: this.getInternalData.bind(this),\n        getContext: this.getContext.bind(this),\n        getDep: this.getDep.bind(this),\n        uuid\n      }\n    };\n\n    // Bind static objects to instance (utils and services eventually should be initialized)\n    ['utils', 'services', 'staticData'].forEach(type => {\n      if (root[type]) this[type] = root[type];\n    });\n\n    // Create storage instance\n    this._private.global.storage = new Storage(root.storage);\n\n    // Create relation controller instance\n    this._private.global.relations = new RelationController(\n      this._private.global\n    );\n\n    // Prepare\n    this.initCollections(root);\n    this.initRuntime();\n\n    // Finalize\n    this.bindCollectionPublicData();\n    this.runAllComputed();\n\n    this.initComplete();\n  }\n\n  initCollections(root: RootCollectionObject) {\n    this._private.collectionKeys = [];\n    if (root.collections) {\n      this._private.collectionKeys = [\n        ...Object.keys(root.collections),\n        ...this._private.collectionKeys\n      ];\n      for (let i = 0; i < this._private.collectionKeys.length; i++) {\n        // Create collection instance\n        this._private.collections[\n          this._private.collectionKeys[i]\n        ] = new Collection(\n          this._private.collectionKeys[i], // name\n          this._private.global, // global\n          root.collections[this._private.collectionKeys[i]] // collection config\n        );\n      }\n    }\n    // Create request class\n    if (this._private.global.config.enableRequest !== false)\n      this._private.collectionKeys.push('request');\n    this._private.collections['request'] = new Request(\n      this._private.global,\n      root.request || {}\n    );\n\n    // Create base class\n    if (this._private.global.config.enableBase !== false) {\n      this._private.collectionKeys.push('base');\n      this._private.collections['base'] = new Base(this._private.global, root);\n    }\n  }\n\n  initRuntime() {\n    this._private.runtime = new Runtime(\n      this._private.collections,\n      this._private.global\n    );\n  }\n\n  private bindCollectionPublicData(): void {\n    for (let i = 0; i < this._private.collectionKeys.length; i++) {\n      const collection = this._private.collections[\n        this._private.collectionKeys[i]\n      ];\n      this._private.global.contextRef[this._private.collectionKeys[i]] =\n        collection.public.object;\n\n      this[this._private.collectionKeys[i]] = collection.public.object;\n    }\n  }\n\n  runAllComputed() {\n    for (let i = 0; i < this._private.collectionKeys.length; i++) {\n      const collection = this._private.collections[\n        this._private.collectionKeys[i]\n      ];\n\n      const computedKeys = collection.keys.computed;\n      for (let i = 0; i < computedKeys.length; i++) {\n        const computedName = computedKeys[i];\n        this._private.runtime.performComputedOutput({\n          collection: collection.name,\n          property: computedName,\n          type: JobType.COMPUTED_REGEN\n        });\n        collection.runWatchers(computedName);\n      }\n    }\n  }\n\n  initComplete() {\n    this._private.global.initComplete = true;\n    log('INIT COMPLETE', Object.assign({}, this));\n    if (!this._private.global.config.ssr) {\n      try {\n        window._pulse = this;\n      } catch (e) {}\n    }\n  }\n\n  public wrapped(ReactComponent, mapData) {\n    const config = this._private.global.config;\n    if (config.framework === 'react' && config.frameworkConstructor) {\n      return withPulse(\n        this,\n        config.frameworkConstructor,\n        ReactComponent,\n        mapData\n      );\n    } else return false;\n  }\n\n  private prepareConfig(config) {\n    // defaults\n    config = defineConfig(config, {\n      framework: null,\n      waitForMount: false,\n      autoUnmount: false\n    });\n\n    // detect if framework passed in is a React constructor\n    if (\n      config.framework &&\n      config.framework.hasOwnProperty(\n        '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'\n      )\n    ) {\n      config.frameworkConstructor = config.framework;\n      config.framework = 'react';\n    }\n\n    if (config.framework === 'react') {\n      if (config.waitForMount != false) config.waitForMount = true;\n      if (config.autoUnmount != false) config.autoUnmount = true;\n    }\n    return config;\n  }\n\n  getInternalData(collection, primaryKey) {\n    return this._private.collections[collection].findById(primaryKey);\n  }\n\n  // returns Dep instance by \"touching\" reactive property revealing its Dep class\n  // if collection param is present we'll assume the property param is the name of the property, not a reference to the property itself\n  getDep(property: any, collection: string, forData?: boolean): Dep {\n    let dep: Dep;\n    // if forData is true we'll go straight for the internal dep\n    if (!forData) {\n      // \"touching\" is simply invoking the property's getter\n      this._private.global.touching = true;\n      if (typeof collection === 'string') {\n        this._private.collections[collection].public.object[property];\n      } else if (typeof collection === 'object') {\n        collection[property];\n      }\n\n      // Extract the dep\n      dep = this._private.global.touched as Dep;\n      this._private.global.touching = false;\n      this._private.global.touched = null;\n\n      // if still no dep found, look inward lol\n      if (!dep)\n        dep = this._private.collections[collection].internalDataDeps[property];\n    } else {\n      dep = this._private.collections[collection].internalDataDeps[property];\n    }\n    return dep as Dep;\n  }\n\n  dispatch(type: string, payload) {\n    switch (type) {\n      case 'mutation':\n        this._private.runtime.ingest({\n          type: JobType.PUBLIC_DATA_MUTATION,\n          collection: payload.collection,\n          property: payload.key,\n          value: payload.value,\n          dep: payload.dep\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getContext(collection) {\n    const c = this._private.collections[collection];\n    if (!c) return this._private.global.contextRef;\n    return {\n      ...this._private.global.contextRef,\n      ...c.methods,\n      data: c.public.object,\n      indexes: c.indexes.object,\n      groups: c.public.object,\n      computed: c.public.object,\n      routes: c.public.object.routes,\n      local: c.local\n    };\n  }\n\n  install(Vue) {\n    this._private.global.config.framework = 'vue';\n    const pulse = this;\n    const config = pulse._private.global.config;\n    Vue.mixin({\n      beforeCreate() {\n        Object.keys(pulse._private.global.contextRef).forEach(collection => {\n          this['$' + collection] = pulse._private.global.contextRef[collection];\n        });\n\n        if (pulse.utils) this.$utils = pulse.utils;\n        if (pulse.services) this.$services = pulse.services;\n        if (pulse.staticData) this.$staticData = pulse.staticData;\n\n        this.mapData = properties =>\n          pulse.mapData(\n            properties,\n            this,\n            {\n              waitForMount: config.waitForMount\n            },\n            pulse\n          );\n      },\n      mounted() {\n        if (this.__pulseUniqueIdentifier && config.waitForMount)\n          pulse.mount(this);\n      },\n      beforeDestroy() {\n        if (this.__pulseUniqueIdentifier && config.autoUnmount)\n          pulse.unmount(this);\n      }\n    });\n  }\n\n  mount(instance) {\n    this._private.global.subs.mount(instance);\n  }\n\n  unmount(instance) {\n    this._private.global.subs.unmount(instance);\n  }\n\n  mapData(properties, instance = {}, _config = {}, pulseAlias?: any) {\n    let pulse = pulseAlias ? pulseAlias : this;\n    const config = {\n      waitForMount: true,\n      ..._config\n    };\n    const componentUUID = pulse._private.global.subs.registerComponent(\n      instance,\n      config\n    );\n\n    this._private.global.mappingData = true;\n    // new cool mapData method\n    if (typeof properties === 'function') {\n      return pulse._private.global.subs.subscribePropertiesToComponents(\n        properties,\n        componentUUID\n      );\n      // legacy support....\n    } else if (typeof properties === 'object') {\n      let returnData = {};\n      normalizeMap(properties).forEach(({ key, val }) => {\n        let collection = val.split('/')[0];\n        let property = val.split('/')[1];\n        let c = pulse._private.global.getContext()[collection];\n        returnData[\n          key\n        ] = pulse._private.global.subs.subscribePropertiesToComponents(() => {\n          return { [key]: c[property] };\n        }, componentUUID)[key];\n      });\n      this._private.global.mappingData = false;\n\n      returnData = cleanse(returnData);\n\n      return returnData;\n    }\n  }\n\n  emit(name: string, payload: any): void {\n    if (this._private.events[name])\n      for (let i = 0; i < this._private.events[name].length; i++) {\n        const callback = this._private.events[name][i];\n        callback(payload);\n      }\n  }\n  on(name: string, callback: () => any): void {\n    if (!Array.isArray(this._private.events[name]))\n      this._private.events[name] = [callback];\n    else this._private.events[name].push(callback);\n  }\n\n  log(type: DebugType): void {\n    // let debugMode: Set<DebugType> = this._private.global.config.debugMode;\n    // if (debugMode.size === 0) return;\n    // if (debugMode.has(DebugType.ERRORS)) {\n    // }\n    // log(DebugType.ASSERT, `There was an error with \"${thing}\", bad :(`);\n    // const AssertMessages = {\n    //   INDEX_UPDATE_FAILED: (collection, property) =>\n    //     `The type ${collection} is ${property}.`\n    //   // and more\n    // };\n    // function _log(callback) {\n    // }\n    // _log(({ AssertMessages }) => AssertMessages.INDEX_UPDATE_FAILED(thing, thing2));\n  }\n}\n"],"names":["Dep","tslib_1.__extends","_typeof","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","withPulse","pulse","React","ReactComponent","selectData","props","state","mapData","waitForMount","_private","global","config","mount","autoUnmount","unmount","createElement","Component","Base"],"mappings":"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"}